grammar org.agileware.natural.lang.Natural hidden(WS, SL_COMMENT)

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate model "http://www.agileware.org/natural/lang"

/**
 * 
 */
NaturalModel: {NaturalModel}
	BLANK_SPACE?
	document=Document?
;

/**
 * 
 */
Document: {Document}
	(meta=Meta BLANK_SPACE?)?
	'Document:' title=Text? NL
	(BLANK_SPACE? narrative=MultilineText)?
	(BLANK_SPACE? sections+=Section)*
	BLANK_SPACE?
;

/**
 * 
 */	
Section: {Section}
	(meta=Meta BLANK_SPACE?)?
	'Section:' title=Text? NL
	(BLANK_SPACE? narrative=MultilineText)?
;

/**
 * 
 */
Meta: {Meta}
	tags+=Tag
	  (BLANK_SPACE? tags+=Tag)*
	NL
;

/**
 * 
 */
Tag: {Tag}
	value=TAGNAME 
;

/**
 * 
 */
DocString: {DocString}
	value=DOC_STRING_LITERAL
	NL
;

terminal DOC_STRING_LITERAL: 
	('"""' -> '"""')
	  | ("'''" -> "'''")
;

/**
 * 
 */
Table: {Table}
	rows+=TableRow+
;

/**
 * 
 */
TableRow: {TableRow}
	cols+=TableCol+ '|' NL
;

/**
 * 
 */
TableCol: {TableCol}
	value=TABLE_CELL
;

terminal TABLE_CELL: '|' !('|' | '\n' | '\r')*;

/**
 * 
 */
Text:
	value=TEXT_LITERAL
;

TEXT_LITERAL:
	WORD_LITERAL (WORD_LITERAL | TAGNAME | TABLE_CELL)*
;

/**
 * 
 */
MultilineText:
	value=MULTILINE_TEXT_LITERAL
;

MULTILINE_TEXT_LITERAL:
	(WORD_LITERAL (WORD_LITERAL | TAGNAME | TABLE_CELL)* NL)+
	(NL+ WORD_LITERAL (WORD_LITERAL | TAGNAME | TABLE_CELL)* NL)*
;

WORD_LITERAL: NUMBER
	| STRING
	| WORD
	| ANY_OTHER
;


terminal NUMBER returns ecore::EDouble:
	'-'?
	DIGIT+
	('.' DIGIT+)?
;

terminal STRING:
	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\') | !('\\' | '"' | '\r' | '\n'))* '"' |
	"'" ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\') | !('\\' | "'" | '\r' | '\n'))* "'";

terminal SL_COMMENT: '#' !('\n' | '\r')* NL;

terminal TAGNAME: '@' !(' ' | '\t' | '\n' | '\r')+ ;

terminal WORD: 
	!('@' | '|' | ' ' | '\t' | '\n' | '\r')
	!(' ' | '\t' | '\n' | '\r')*
;

BLANK_SPACE: NL+ WS*;
terminal NL: ('\r'? '\n') | EOF;

terminal WS: (SPACE | '\t');

terminal ANY_OTHER: .;

// Character Ranges
////

terminal fragment SPACE: ASCII_SPACE;
terminal fragment DIGIT: ASCII_DIGIT;
terminal fragment LETTER: LATIN_ALPHABET;


// Basic Latin
////

terminal fragment ASCII_SPACE: '\u0020';

terminal fragment ASCII_DIGIT: ('\u0030'..'\u0039');

// all ascii chars other than letters, digits, space, or control codes
terminal fragment ASCII_SYMBOLS: ('\u0021'..'\u002F')
	| ('\u003A'..'\u0040')
	| ('\u005B'..'\u0060')
	| ('\u007B'..'\u007E')
;

terminal fragment LATIN_ALPHABET: ('\u0041'..'\u005A')
	| ('\u0061'..'\u007A')
;
