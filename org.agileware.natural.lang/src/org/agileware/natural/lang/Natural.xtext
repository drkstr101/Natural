grammar org.agileware.natural.lang.Natural hidden(WS, SL_COMMENT)

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate model "http://www.agileware.org/natural/lang"

/**
 * 
 */
NaturalModel: {NaturalModel}
	BLANK_SPACE?
	document=Document?
;

/**
 * 
 */
Document: {Document}
	(meta=Meta BLANK_SPACE?)?
	'Document:' title=Text? NL
	(BLANK_SPACE? narrative=Narrative)?
	(BLANK_SPACE? sections+=Section)*
	BLANK_SPACE?
;

/**
 * 
 */	
Section: {Section}
	(meta=Meta BLANK_SPACE?)?
	'Section:' title=Text? NL
	(BLANK_SPACE? narrative=Narrative)?
;

/**
 * 
 */
Meta: {Meta}
	tags+=Tag
	  (BLANK_SPACE? tags+=Tag)*
	NL
;

/**
 * 
 */
Tag: {Tag}
	value=TAG_LITERAL
;

terminal TAG_LITERAL returns ecore::EString:
	'@' WORD_LITERAL
	(':'? !('@' | ':' | '\n' | '\r')+)?
;

Narrative:
   sections+=NarrativeSection
     (BLANK_SPACE sections+=NarrativeSection)*
;

NarrativeSection: Paragraph
	| DocString
	| Table
;

Paragraph:
	value=MultilineText
;

/**
 * 
 */
DocString: {DocString}
	value=DOC_STRING_LITERAL
	NL
;

terminal DOC_STRING_LITERAL: 
	('"""' -> '"""')
	  | ("'''" -> "'''")
;

/**
 * 
 */
Table: {Table}
	rows+=TableRow+
;

/**
 * 
 */
TableRow: {TableRow}
	cols+=TableCol+ '|' NL
;

/**
 * 
 */
TableCol: {TableCol}
	value=TABLE_CELL
;

terminal TABLE_CELL: '|' !('|' | '\n' | '\r')*;


// --------------------------------------
// Text Literals
// --------------------------------------

Text: TEXT_LITERAL+;

TEXT_LITERAL: WORD_LITERAL
	| STRING_LITERAL
	| NUMBER_LITERAL
	| TAG_LITERAL
	| PUNCTUATION
	| ANY_OTHER
;

MultilineText:
	MULTILINE_TEXT_LITERAL+
;

MULTILINE_TEXT_LITERAL:
	(WORD_LITERAL | NUMBER_LITERAL | STRING_LITERAL | PUNCTUATION | ANY_OTHER)
	TEXT_LITERAL*
	NL
;


terminal STRING_LITERAL returns ecore::EString:
	('"' STRING_CHARACTER* '"')
	| ("'" STRING_CHARACTER* "'")
;

terminal fragment STRING_CHARACTER:
	!('"' | '\\' | '\n' | '\r')
	| ESCAPE_SEQUENCE
;

terminal fragment ESCAPE_SEQUENCE:
	'\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | '\'' | '\\')
	| OCTAL_ESCAPE
;

terminal fragment OCTAL_ESCAPE:
	'\\' '0'..'7'
	| '\\' '0'..'7' '0'..'7'
	| '\\' '0'..'3' '0'..'7' '0'..'7'
;


terminal NUMBER_LITERAL returns ecore::EDouble:
	'-'? DIGIT+ '.' DIGIT* EXPONENT_PART?
	| '-'? '.' DIGIT+ EXPONENT_PART?
	| '-'? DIGIT+ EXPONENT_PART
	| '-'? DECIMAL_NUMBER
	| '-'? HEX_NUMBER
	| '-'? OCTAL_NUMBER
;

terminal fragment DECIMAL_NUMBER:
	NON_ZERO_DIGIT DIGIT*
;

terminal fragment HEX_NUMBER:
	'0' ('x' | 'X') ('0'..'9' | 'a'..'f' | 'A'..'F')+
;

terminal fragment OCTAL_NUMBER:
	'0' '0'..'7'*
;

terminal fragment EXPONENT_PART:
	('e' | 'E') ('+' | '-')? DIGIT+
;

terminal WORD_LITERAL returns ecore::EString:
	(LETTER | DIGIT)
	(LETTER | DIGIT | '_' | '.' | '-')*
;


terminal fragment DIGIT: '0' | NON_ZERO_DIGIT;

terminal fragment NON_ZERO_DIGIT: '1'..'9';

terminal fragment LETTER: LATIN_ALPHABET;

terminal fragment LATIN_ALPHABET: ('\u0041'..'\u005A')
	| ('\u0061'..'\u007A')
;


terminal SL_COMMENT: '#' !('\n' | '\r')* NL;

BLANK_SPACE: NL+ WS*;

terminal NL: ('\r'? '\n') 
	| EOF
;

terminal WS: (' ' | '\t');

terminal PUNCTUATION: ASCII_SYMBOLS
	| '...'
	| '```'
;

// all ascii chars other than letters, digits, space, or control codes
terminal fragment ASCII_SYMBOLS: ('\u0021'..'\u002F')
	| ('\u003A'..'\u0040')
	| ('\u005B'..'\u0060')
	| ('\u007B'..'\u007E')
;

terminal ANY_OTHER: .;

